{"version":3,"sources":["components/Navigation/Navigation.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleTable/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/MainRouter/MainRouter.tsx","App.tsx","index.tsx"],"names":["IsLinkActive","isActive","cn","Navigation","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonRow","person","people","mother","find","p","name","motherName","father","fatherName","getName","pathname","useLocation","slug","sex","born","died","PeopleTable","useState","isLoading","setIsLoading","setPeople","hasError","setHasError","useEffect","catch","finally","length","map","PeoplePage","NotFoundPage","MainRouter","path","element","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8e631749.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst IsLinkActive = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={IsLinkActive}>\n            Home\n          </NavLink>\n\n          <NavLink to=\"/people\" className={IsLinkActive}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable no-console */\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport const PersonRow:React.FC<{\n  person: Person,\n  people: Person[]\n}> = ({ person, people }) => {\n  const mother = people.find(p => p.name === person.motherName) || null;\n  const father = people.find(p => p.name === person.fatherName) || null;\n  const getName = (name:string | null) => (!name ? '-' : name);\n\n  const { pathname } = useLocation();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={pathname === `/people/${person.slug}`\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <NavLink to={`/people/${person.slug}`} className={person.sex === 'm' ? '' : 'has-text-danger'}>\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother ? (\n          <NavLink\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.motherName}\n          </NavLink>\n        ) : getName(person.motherName) }\n\n      </td>\n      <td>\n        {father ? (\n          <NavLink to={`/people/${father.slug}`}>\n            {person.fatherName}\n          </NavLink>\n        ) : getName(person.fatherName) }\n\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleTable:React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState<boolean>(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => setPeople(response))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {!isLoading && hasError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isLoading && !hasError && people.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        ) }\n\n        {people.length > 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person:Person) => (\n                <PersonRow\n                  person={person}\n                  people={people}\n                />\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage:React.FC = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable />\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from '../../pages/HomePage';\nimport { PeoplePage } from '../../pages/PeoplePage';\nimport { NotFoundPage } from '../../pages/NotFoundPage';\n\nexport const MainRouter:React.FC = () => (\n  <main className=\"section\">\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/people/:slug\" element={<PeoplePage />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </main>\n);\n","import './App.scss';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { MainRouter } from './components/MainRouter/MainRouter';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <MainRouter />\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}